apiVersion: apps/v1
kind: Deployment
metadata:
  name: secret-service
  namespace: continuum-27aa6c
  labels:
    app.kubernetes.io/instance: '27aa6c'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: secret-service
  template:
    metadata:
      labels:
        app: secret-service
        app.kubernetes.io/instance: '27aa6c'
    spec:
      runtimeClassName: contrast-cc
      containers:
        - name: secret-service
          image: 'ghcr.io/edgelesssys/privatemode/secret-service:v1.18.0@sha256:de0ecf34d505f9c9fa44987bdc914fc1829cc55a7ced81807c2a143e9b6e2483'
          args:
            - '--etcd-host=secret-service-internal.continuum-27aa6c.svc.cluster.local'
            - '--etcd-server-cert=/contrast/tls-config/certChain.pem'
            - '--etcd-server-key=/contrast/tls-config/key.pem'
            - '--etcd-ca=/contrast/tls-config/mesh-ca.pem'
          ports:
            - containerPort: 3000
            - containerPort: 3001
            - containerPort: 9000
            - containerPort: 2379
            - containerPort: 2380
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: workload-embeddings
  namespace: continuum-27aa6c
  labels:
    app: workload-embeddings
    app.kubernetes.io/instance: '27aa6c'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: workload-embeddings
  serviceName: workload-embeddings
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: workload-embeddings
        app.kubernetes.io/instance: '27aa6c'
        privatemode.edgeless.systems/needs-gpu: "true"
      annotations:
        io.katacontainers.config.hypervisor.default_memory: "64000"
        io.katacontainers.config.runtime.create_container_timeout: "1800"
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8000"
    spec:
      serviceAccountName: workload-embeddings-sa
      runtimeClassName: contrast-cc
      initContainers:
        - name: attestation-agent
          image: ghcr.io/edgelesssys/privatemode/attestation-agent:v1.18.0@sha256:60a9f2ae1505985d53bce6ba6ef3e37955f03b73ab0472d7f47672113d389bf5
          env:
            - name: NVIDIA_VISIBLE_DEVICES
              value: "all"
          command:
            - '/bin/sh'
            - '-c'
          args:
            - |
              ln -sf /usr/lib64/libnvidia-ml.so.550.90.07 /usr/lib64/libnvidia-ml.so.1 && \
              LD_PRELOAD=/usr/lib64/libcuda.so.1:usr/lib64/libnvidia-ml.so.1 attestation-agent \
                --gpu-debug=false \
                --gpu-secure-boot=true \
                --gpu-eat-version=EAT-21 \
                --gpu-driver-versions=535.104.05,535.129.03,550.90.07 \
                --gpu-vbios-versions=96.00.88.00.11,96.00.74.00.11,96.00.9F.00.04,96.00.74.00.1C
          securityContext:
            privileged: true
          resources:
            limits:
              "nvidia.com/GH100_H100_PCIE": 1
        - name: disk-mounter-embeddings-0
          image: ghcr.io/edgelesssys/privatemode/disk-mounter:v1.18.0@sha256:116af04c8874b344bf15cb222bbef58801d6d59b080f4b8d4d6b2aa95adc28ff
          args:
            - --root-hash=98fcf1a13ce17114d7647073feebaff00d709f9804d31be00e918d2ea4fa0df4
            - --device-path=/dev/modelweights-embeddings-0
            - --mount-path=/mnt/modelweights-embeddings-0
          restartPolicy: Always
          securityContext:
            privileged: true
          volumeMounts:
            - name: mount-dir
              mountPath: /mnt
              mountPropagation: Bidirectional
          volumeDevices:
            - name: modelweights-embeddings-0
              devicePath: /dev/modelweights-embeddings-0
      containers:
        - name: workload-embeddings-0
          image: docker.io/vllm/vllm-openai:v0.9.0@sha256:df2c55e5107afea09ea1a50f9dd96c99ebf97a795334c4d08f691f3d79b2ab12
          ports:
            - containerPort: 8000
          readinessProbe:
            httpGet:
              path: /v1/models
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 5
          env:
            - name: NVIDIA_VISIBLE_DEVICES
              value: "all"
            - name: LD_PRELOAD
              value: "/usr/lib/x86_64-linux-gnu/libcuda.so.1"
          args:
            - '--prefix-caching-hash-algo=sha256'
            - '--host=0.0.0.0'
            - '--enable-prompt-tokens-details'
            - '--port=8000'
            - '--model=/mnt/modelweights-embeddings-0'
            - '--served-model-name'
            - 'intfloat/multilingual-e5-large-instruct'
            - '--disable-log-requests'
          volumeMounts:
            - name: mount-dir
              mountPath: /mnt
              mountPropagation: HostToContainer
          resources:
            limits:
              "nvidia.com/GH100_H100_PCIE": 1
        - name: inference-proxy-embeddings-0
          image: ghcr.io/edgelesssys/privatemode/inference-proxy:v1.18.0@sha256:592d1143d580c9a6d3672f94266678dcc29f8e84a6c7a4fa90c073f5016445fe
          ports:
            - containerPort: 8085
          args:
            - '--adapter-type=openai'
            - '--workload-address=127.0.0.1'
            - '--listen-port=8085'
            - '--workload-port=8000'
            - '--secret-svc-address=secret-service-internal.continuum-27aa6c.svc.cluster.local'
            - '--etcd-member-cert=/contrast/tls-config/certChain.pem'
            - '--etcd-member-key=/contrast/tls-config/key.pem'
            - '--etcd-ca=/contrast/tls-config/mesh-ca.pem'
            - '--workload-tasks=embed'
          volumeMounts:
            - name: inference-proxy-embeddings-0-tls-cert
              mountPath: /etc/tls
              readOnly: true
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app: workload-embeddings
      volumes:
        - emptyDir: {}
          name: mount-dir
        - name: inference-proxy-embeddings-0-tls-cert
          secret:
            secretName: inference-proxy-embeddings-0-tls-secret
  volumeClaimTemplates:
    - kind: PersistentVolumeClaim
      metadata:
        name: modelweights-embeddings-0
        labels:
          app.kubernetes.io/instance: '27aa6c'
      spec:
        storageClassName: intfloat-multilingual-e5-large-instruct
        volumeMode: Block
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 5Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: workload-multimodal
  namespace: continuum-27aa6c
  labels:
    app: workload-multimodal
    app.kubernetes.io/instance: '27aa6c'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: workload-multimodal
  serviceName: workload-multimodal
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: workload-multimodal
        app.kubernetes.io/instance: '27aa6c'
        privatemode.edgeless.systems/needs-gpu: "true"
      annotations:
        io.katacontainers.config.hypervisor.default_memory: "64000"
        io.katacontainers.config.runtime.create_container_timeout: "1800"
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8000"
    spec:
      serviceAccountName: workload-multimodal-sa
      runtimeClassName: contrast-cc
      initContainers:
        - name: attestation-agent
          image: ghcr.io/edgelesssys/privatemode/attestation-agent:v1.18.0@sha256:60a9f2ae1505985d53bce6ba6ef3e37955f03b73ab0472d7f47672113d389bf5
          env:
            - name: NVIDIA_VISIBLE_DEVICES
              value: "all"
          command:
            - '/bin/sh'
            - '-c'
          args:
            - |
              ln -sf /usr/lib64/libnvidia-ml.so.550.90.07 /usr/lib64/libnvidia-ml.so.1 && \
              LD_PRELOAD=/usr/lib64/libcuda.so.1:usr/lib64/libnvidia-ml.so.1 attestation-agent \
                --gpu-debug=false \
                --gpu-secure-boot=true \
                --gpu-eat-version=EAT-21 \
                --gpu-driver-versions=535.104.05,535.129.03,550.90.07 \
                --gpu-vbios-versions=96.00.88.00.11,96.00.74.00.11,96.00.9F.00.04,96.00.74.00.1C
          securityContext:
            privileged: true
          resources:
            limits:
              "nvidia.com/GH100_H100_PCIE": 1
        - name: disk-mounter-multimodal-0
          image: ghcr.io/edgelesssys/privatemode/disk-mounter:v1.18.0@sha256:116af04c8874b344bf15cb222bbef58801d6d59b080f4b8d4d6b2aa95adc28ff
          args:
            - --root-hash=f48f5b54de04d98fc0fab62428fd70b2b5f8e893ebd74925baa79bf523d2a4f3
            - --device-path=/dev/modelweights-multimodal-0
            - --mount-path=/mnt/modelweights-multimodal-0
          restartPolicy: Always
          securityContext:
            privileged: true
          volumeMounts:
            - name: mount-dir
              mountPath: /mnt
              mountPropagation: Bidirectional
          volumeDevices:
            - name: modelweights-multimodal-0
              devicePath: /dev/modelweights-multimodal-0
      containers:
        - name: workload-multimodal-0
          image: docker.io/vllm/vllm-openai:v0.9.0@sha256:df2c55e5107afea09ea1a50f9dd96c99ebf97a795334c4d08f691f3d79b2ab12
          ports:
            - containerPort: 8000
          readinessProbe:
            httpGet:
              path: /v1/models
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 5
          env:
            - name: NVIDIA_VISIBLE_DEVICES
              value: "all"
            - name: LD_PRELOAD
              value: "/usr/lib/x86_64-linux-gnu/libcuda.so.1"
          args:
            - '--prefix-caching-hash-algo=sha256'
            - '--host=0.0.0.0'
            - '--enable-prompt-tokens-details'
            - '--port=8000'
            - '--model=/mnt/modelweights-multimodal-0'
            - '--served-model-name'
            - 'leon-se/gemma-3-27b-it-fp8-dynamic'
            - '--disable-log-requests'
            - '--max-model-len=70000'
          volumeMounts:
            - name: mount-dir
              mountPath: /mnt
              mountPropagation: HostToContainer
          resources:
            limits:
              "nvidia.com/GH100_H100_PCIE": 1
        - name: inference-proxy-multimodal-0
          image: ghcr.io/edgelesssys/privatemode/inference-proxy:v1.18.0@sha256:592d1143d580c9a6d3672f94266678dcc29f8e84a6c7a4fa90c073f5016445fe
          ports:
            - containerPort: 8085
          args:
            - '--adapter-type=openai'
            - '--workload-address=127.0.0.1'
            - '--listen-port=8085'
            - '--workload-port=8000'
            - '--secret-svc-address=secret-service-internal.continuum-27aa6c.svc.cluster.local'
            - '--etcd-member-cert=/contrast/tls-config/certChain.pem'
            - '--etcd-member-key=/contrast/tls-config/key.pem'
            - '--etcd-ca=/contrast/tls-config/mesh-ca.pem'
            - '--workload-tasks=generate,vision'
          volumeMounts:
            - name: inference-proxy-multimodal-0-tls-cert
              mountPath: /etc/tls
              readOnly: true
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app: workload-multimodal
      volumes:
        - emptyDir: {}
          name: mount-dir
        - name: inference-proxy-multimodal-0-tls-cert
          secret:
            secretName: inference-proxy-multimodal-0-tls-secret
  volumeClaimTemplates:
    - kind: PersistentVolumeClaim
      metadata:
        name: modelweights-multimodal-0
        labels:
          app.kubernetes.io/instance: '27aa6c'
      spec:
        storageClassName: leon-se-gemma-3-27b-it-fp8-dynamic
        volumeMode: Block
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 30Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: workload-textgen
  namespace: continuum-27aa6c
  labels:
    app: workload-textgen
    app.kubernetes.io/instance: '27aa6c'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: workload-textgen
  serviceName: workload-textgen
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: workload-textgen
        app.kubernetes.io/instance: '27aa6c'
        privatemode.edgeless.systems/needs-gpu: "true"
      annotations:
        io.katacontainers.config.hypervisor.default_memory: "64000"
        io.katacontainers.config.runtime.create_container_timeout: "1800"
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8000"
    spec:
      serviceAccountName: workload-textgen-sa
      runtimeClassName: contrast-cc
      initContainers:
        - name: attestation-agent
          image: ghcr.io/edgelesssys/privatemode/attestation-agent:v1.18.0@sha256:60a9f2ae1505985d53bce6ba6ef3e37955f03b73ab0472d7f47672113d389bf5
          env:
            - name: NVIDIA_VISIBLE_DEVICES
              value: "all"
          command:
            - '/bin/sh'
            - '-c'
          args:
            - |
              ln -sf /usr/lib64/libnvidia-ml.so.550.90.07 /usr/lib64/libnvidia-ml.so.1 && \
              LD_PRELOAD=/usr/lib64/libcuda.so.1:usr/lib64/libnvidia-ml.so.1 attestation-agent \
                --gpu-debug=false \
                --gpu-secure-boot=true \
                --gpu-eat-version=EAT-21 \
                --gpu-driver-versions=535.104.05,535.129.03,550.90.07 \
                --gpu-vbios-versions=96.00.88.00.11,96.00.74.00.11,96.00.9F.00.04,96.00.74.00.1C
          securityContext:
            privileged: true
          resources:
            limits:
              "nvidia.com/GH100_H100_PCIE": 1
        - name: disk-mounter-textgen-0
          image: ghcr.io/edgelesssys/privatemode/disk-mounter:v1.18.0@sha256:116af04c8874b344bf15cb222bbef58801d6d59b080f4b8d4d6b2aa95adc28ff
          args:
            - --root-hash=3a49ed30e4a637228b5d962c6b1fa508bad337ca73ef02cb9f0dcc7931fefad7
            - --device-path=/dev/modelweights-textgen-0
            - --mount-path=/mnt/modelweights-textgen-0
          restartPolicy: Always
          securityContext:
            privileged: true
          volumeMounts:
            - name: mount-dir
              mountPath: /mnt
              mountPropagation: Bidirectional
          volumeDevices:
            - name: modelweights-textgen-0
              devicePath: /dev/modelweights-textgen-0
      containers:
        - name: workload-textgen-0
          image: docker.io/vllm/vllm-openai:v0.9.0@sha256:df2c55e5107afea09ea1a50f9dd96c99ebf97a795334c4d08f691f3d79b2ab12
          ports:
            - containerPort: 8000
          readinessProbe:
            httpGet:
              path: /v1/models
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 5
          env:
            - name: NVIDIA_VISIBLE_DEVICES
              value: "all"
            - name: LD_PRELOAD
              value: "/usr/lib/x86_64-linux-gnu/libcuda.so.1"
          args:
            - '--prefix-caching-hash-algo=sha256'
            - '--host=0.0.0.0'
            - '--enable-prompt-tokens-details'
            - '--port=8000'
            - '--model=/mnt/modelweights-textgen-0'
            - '--served-model-name'
            - 'ibnzterrell/Meta-Llama-3.3-70B-Instruct-AWQ-INT4'
            - 'latest'
            - '--disable-log-requests'
            - '--max-model-len=70000'
            - '--enable-auto-tool-choice'
            - '--tool-call-parser'
            - 'llama3_json'
          volumeMounts:
            - name: mount-dir
              mountPath: /mnt
              mountPropagation: HostToContainer
          resources:
            limits:
              "nvidia.com/GH100_H100_PCIE": 1
        - name: inference-proxy-textgen-0
          image: ghcr.io/edgelesssys/privatemode/inference-proxy:v1.18.0@sha256:592d1143d580c9a6d3672f94266678dcc29f8e84a6c7a4fa90c073f5016445fe
          ports:
            - containerPort: 8085
          args:
            - '--adapter-type=openai'
            - '--workload-address=127.0.0.1'
            - '--listen-port=8085'
            - '--workload-port=8000'
            - '--secret-svc-address=secret-service-internal.continuum-27aa6c.svc.cluster.local'
            - '--etcd-member-cert=/contrast/tls-config/certChain.pem'
            - '--etcd-member-key=/contrast/tls-config/key.pem'
            - '--etcd-ca=/contrast/tls-config/mesh-ca.pem'
            - '--workload-tasks=generate,tool_calling'
          volumeMounts:
            - name: inference-proxy-textgen-0-tls-cert
              mountPath: /etc/tls
              readOnly: true
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app: workload-textgen
      volumes:
        - emptyDir: {}
          name: mount-dir
        - name: inference-proxy-textgen-0-tls-cert
          secret:
            secretName: inference-proxy-textgen-0-tls-secret
  volumeClaimTemplates:
    - kind: PersistentVolumeClaim
      metadata:
        name: modelweights-textgen-0
        labels:
          app.kubernetes.io/instance: '27aa6c'
      spec:
        storageClassName: ibnzterrell-meta-llama-3-3-70b-instruct-awq-int4
        volumeMode: Block
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 41Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: unstructured-api
  namespace: continuum-27aa6c
  labels:
    app: unstructured-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: unstructured-api
  template:
    metadata:
      labels:
        app: unstructured-api
        app.kubernetes.io/instance: '27aa6c'
      annotations:
        io.katacontainers.config.runtime.create_container_timeout: "600"
    spec:
      runtimeClassName: contrast-cc
      containers:
        - name: unstructured-api
          image: 'quay.io/unstructured-io/unstructured-api:0.0.85@sha256:19c7f0fd9d211ffa7b9c790414cd9d30531c42e709a77d427e1ab7bcf2b74e7e'
          resources:
            requests:
              memory: "24Gi"
            limits:
              memory: "24Gi"
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: http
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 5
        - name: inference-proxy
          image: ghcr.io/edgelesssys/privatemode/inference-proxy:v1.18.0@sha256:592d1143d580c9a6d3672f94266678dcc29f8e84a6c7a4fa90c073f5016445fe
          ports:
            - containerPort: 8085
          args:
            - --adapter-type=unstructured
            - --workload-address=127.0.0.1
            - --workload-port=8000
            - --secret-svc-address=secret-service-internal.continuum-27aa6c.svc.cluster.local
            - '--etcd-member-cert=/contrast/tls-config/certChain.pem'
            - '--etcd-member-key=/contrast/tls-config/key.pem'
            - '--etcd-ca=/contrast/tls-config/mesh-ca.pem'
          volumeMounts:
            - name: unstructured-api-tls-cert
              mountPath: /etc/tls
              readOnly: true
      volumes:
        - name: unstructured-api-tls-cert
          secret:
            secretName: unstructured-api-tls-secret
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: coordinator
  namespace: 'continuum-27aa6c'
  labels:
    app.kubernetes.io/instance: '27aa6c'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: coordinator
  namespace: 'continuum-27aa6c'
  labels:
    app.kubernetes.io/instance: '27aa6c'
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - create
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: coordinator
  namespace: 'continuum-27aa6c'
  labels:
    app.kubernetes.io/instance: '27aa6c'
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: coordinator
subjects:
  - kind: ServiceAccount
    name: coordinator
    namespace: "continuum-27aa6c"
---
apiVersion: v1
kind: Service
metadata:
  name: coordinator
  namespace: 'continuum-27aa6c'
  labels:
    app.kubernetes.io/instance: '27aa6c'
spec:
  ports:
    - name: userapi
      port: 1313
      targetPort: 1313
    - name: meshapi
      port: 7777
      targetPort: 7777
    - name: default-userapi
      port: 443
      targetPort: 1313
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/name: coordinator
    app.kubernetes.io/instance: '27aa6c'
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: coordinator-ready
  namespace: 'continuum-27aa6c'
  labels:
    app.kubernetes.io/instance: '27aa6c'
spec:
  ports:
    - name: userapi
      port: 1313
      targetPort: 1313
    - name: meshapi
      port: 7777
      targetPort: 7777
    - name: default-userapi
      port: 443
      targetPort: 1313
  selector:
    app.kubernetes.io/name: coordinator
    app.kubernetes.io/instance: '27aa6c'
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: coordinator
  namespace: 'continuum-27aa6c'
  labels:
    app.kubernetes.io/instance: '27aa6c'
spec:
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Delete
    whenScaled: Delete
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: coordinator
  serviceName: coordinator
  template:
    metadata:
      annotations:
        contrast.edgeless.systems/pod-role: coordinator
      labels:
        app.kubernetes.io/name: coordinator
        app.kubernetes.io/instance: '27aa6c'
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    contrast.edgeless.systems/pod-role: coordinator
                topologyKey: kubernetes.io/hostname
              weight: 100
      containers:
        - image: ghcr.io/edgelesssys/contrast/coordinator:v1.9.0@sha256:82e98e14a1af07c3bcd6acc2939c2a1d315d27c64e77656b4a69e9acae6d8cbe
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /probe/liveness
              port: 9102
            periodSeconds: 10
          name: coordinator
          ports:
            - containerPort: 1313
              name: userapi
            - containerPort: 7777
              name: meshapi
          readinessProbe:
            httpGet:
              path: /probe/readiness
              port: 9102
            periodSeconds: 5
          resources:
            limits:
              memory: 200Mi
            requests:
              memory: 200Mi
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
          startupProbe:
            httpGet:
              path: /probe/startup
              port: 9102
            initialDelaySeconds: 1
            periodSeconds: 1
      runtimeClassName: contrast-cc
      serviceAccountName: coordinator
