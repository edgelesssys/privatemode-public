apiVersion: apps/v1
kind: Deployment
metadata:
  name: secret-service
  namespace: continuum-e14845
  labels:
    app.kubernetes.io/instance: 'e14845'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: secret-service
  template:
    metadata:
      labels:
        app: secret-service
        app.kubernetes.io/instance: 'e14845'
    spec:
      runtimeClassName: contrast-cc
      containers:
        - name: secret-service
          image: 'ghcr.io/edgelesssys/privatemode/secret-service:v1.15.0@sha256:e2620909320895db2962cd11ea4a072e7d57801314f7f6aedaba96f7636ce2e4'
          args:
            - '--etcd-host=secret-service-internal.continuum-e14845.svc.cluster.local'
            - '--etcd-server-cert=/contrast/tls-config/certChain.pem'
            - '--etcd-server-key=/contrast/tls-config/key.pem'
            - '--etcd-ca=/contrast/tls-config/mesh-ca.pem'
          ports:
            - containerPort: 3000
            - containerPort: 3001
            - containerPort: 9000
            - containerPort: 2379
            - containerPort: 2380
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: workload-codegen
  namespace: continuum-e14845
  labels:
    app: workload-codegen
    app.kubernetes.io/instance: 'e14845'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: workload-codegen
  serviceName: workload-codegen
  template:
    metadata:
      labels:
        app: workload-codegen
        app.kubernetes.io/instance: 'e14845'
        privatemode.edgeless.systems/needs-gpu: "true"
      annotations:
        io.katacontainers.config.hypervisor.default_memory: "64000"
        io.katacontainers.config.runtime.create_container_timeout: "1800"
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8000"
    spec:
      serviceAccountName: workload-codegen-sa
      runtimeClassName: contrast-cc
      initContainers:
        - name: attestation-agent
          image: ghcr.io/edgelesssys/privatemode/attestation-agent:v1.15.0@sha256:70f3e0255b72627166dd6e2e749cc2906fb352727d4fa6727d16813f3289c601
          env:
            - name: NVIDIA_VISIBLE_DEVICES
              value: "all"
          command:
            - '/bin/sh'
            - '-c'
          args:
            - |
              ln -sf /usr/lib64/libnvidia-ml.so.550.90.07 /usr/lib64/libnvidia-ml.so.1 && \
              LD_PRELOAD=/usr/lib64/libcuda.so.1:usr/lib64/libnvidia-ml.so.1 attestation-agent \
                --gpu-debug=false \
                --gpu-secure-boot=true \
                --gpu-eat-version=EAT-21 \
                --gpu-driver-versions=535.104.05,535.129.03,550.90.07 \
                --gpu-vbios-versions=96.00.88.00.11,96.00.74.00.11,96.00.9F.00.04,96.00.74.00.1C
          securityContext:
            privileged: true
          resources:
            limits:
              "nvidia.com/GH100_H100_PCIE": 1
        - name: disk-mounter
          image: ghcr.io/edgelesssys/privatemode/disk-mounter:v1.15.0@sha256:0eb04c7dc0f580b202bdb5a5608da0abea5d5922a73c0bd6745e4afbdd8ea67b
          args:
            - --root-hash=c6ab549d3ec1cb75d531886229825deec19e43e1dbc35480fd82a0517f04c14c
            - --device-path=/dev/modelweights
            - --mount-path=/mnt/modelweights
          restartPolicy: Always
          securityContext:
            privileged: true
          volumeMounts:
            - name: mount-dir
              mountPath: /mnt
              mountPropagation: Bidirectional
          volumeDevices:
            - name: modelweights
              devicePath: /dev/modelweights
      containers:
        - name: workload
          image: docker.io/vllm/vllm-openai:v0.8.4@sha256:b168cbb0101f51b2491047345d0a83f5a8ecbe56a6604f2a2edb81eca55ebc9e
          ports:
            - containerPort: 8000
          readinessProbe:
            httpGet:
              path: /v1/models
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 5
          env:
            - name: NVIDIA_VISIBLE_DEVICES
              value: "all"
            - name: LD_PRELOAD
              value: "/usr/lib/x86_64-linux-gnu/libcuda.so.1"
          args:
            - '--no-enable-prefix-caching'
            - '--host=0.0.0.0'
            - '--model=/mnt/modelweights'
            - '--served-model-name'
            - 'mistralai/Codestral-22B-v0.1'
            - '--disable-log-requests'
          volumeMounts:
            - name: mount-dir
              mountPath: /mnt
              mountPropagation: HostToContainer
          resources:
            limits:
              "nvidia.com/GH100_H100_PCIE": 1
        - name: inference-proxy
          image: ghcr.io/edgelesssys/privatemode/inference-proxy:v1.15.0@sha256:55c42d3ed3c74f8f6332e18d7e3ef63abf17cdf136a8121668f116da61a477dc
          ports:
            - containerPort: 8085
          args:
            - --adapter-type=openai
            - --workload-address=127.0.0.1
            - --workload-port=8000
            - --secret-svc-address=secret-service-internal.continuum-e14845.svc.cluster.local
            - '--etcd-member-cert=/contrast/tls-config/certChain.pem'
            - '--etcd-member-key=/contrast/tls-config/key.pem'
            - '--etcd-ca=/contrast/tls-config/mesh-ca.pem'
      volumes:
        - emptyDir: {}
          name: mount-dir
  volumeClaimTemplates:
    - kind: PersistentVolumeClaim
      metadata:
        name: modelweights
        labels:
          app.kubernetes.io/instance: 'e14845'
      spec:
        storageClassName: mistralai-codestral-22b-v0-1
        volumeMode: Block
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 46Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: workload-textgen
  namespace: continuum-e14845
  labels:
    app: workload-textgen
    app.kubernetes.io/instance: 'e14845'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: workload-textgen
  serviceName: workload-textgen
  template:
    metadata:
      labels:
        app: workload-textgen
        app.kubernetes.io/instance: 'e14845'
        privatemode.edgeless.systems/needs-gpu: "true"
      annotations:
        io.katacontainers.config.hypervisor.default_memory: "64000"
        io.katacontainers.config.runtime.create_container_timeout: "1800"
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8000"
    spec:
      serviceAccountName: workload-textgen-sa
      runtimeClassName: contrast-cc
      initContainers:
        - name: attestation-agent
          image: ghcr.io/edgelesssys/privatemode/attestation-agent:v1.15.0@sha256:70f3e0255b72627166dd6e2e749cc2906fb352727d4fa6727d16813f3289c601
          env:
            - name: NVIDIA_VISIBLE_DEVICES
              value: "all"
          command:
            - '/bin/sh'
            - '-c'
          args:
            - |
              ln -sf /usr/lib64/libnvidia-ml.so.550.90.07 /usr/lib64/libnvidia-ml.so.1 && \
              LD_PRELOAD=/usr/lib64/libcuda.so.1:usr/lib64/libnvidia-ml.so.1 attestation-agent \
                --gpu-debug=false \
                --gpu-secure-boot=true \
                --gpu-eat-version=EAT-21 \
                --gpu-driver-versions=535.104.05,535.129.03,550.90.07 \
                --gpu-vbios-versions=96.00.88.00.11,96.00.74.00.11,96.00.9F.00.04,96.00.74.00.1C
          securityContext:
            privileged: true
          resources:
            limits:
              "nvidia.com/GH100_H100_PCIE": 1
        - name: disk-mounter
          image: ghcr.io/edgelesssys/privatemode/disk-mounter:v1.15.0@sha256:0eb04c7dc0f580b202bdb5a5608da0abea5d5922a73c0bd6745e4afbdd8ea67b
          args:
            - --root-hash=3a49ed30e4a637228b5d962c6b1fa508bad337ca73ef02cb9f0dcc7931fefad7
            - --device-path=/dev/modelweights
            - --mount-path=/mnt/modelweights
          restartPolicy: Always
          securityContext:
            privileged: true
          volumeMounts:
            - name: mount-dir
              mountPath: /mnt
              mountPropagation: Bidirectional
          volumeDevices:
            - name: modelweights
              devicePath: /dev/modelweights
      containers:
        - name: workload
          image: docker.io/vllm/vllm-openai:v0.8.4@sha256:b168cbb0101f51b2491047345d0a83f5a8ecbe56a6604f2a2edb81eca55ebc9e
          ports:
            - containerPort: 8000
          readinessProbe:
            httpGet:
              path: /v1/models
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 5
          env:
            - name: NVIDIA_VISIBLE_DEVICES
              value: "all"
            - name: LD_PRELOAD
              value: "/usr/lib/x86_64-linux-gnu/libcuda.so.1"
          args:
            - '--no-enable-prefix-caching'
            - '--host=0.0.0.0'
            - '--model=/mnt/modelweights'
            - '--served-model-name'
            - 'ibnzterrell/Meta-Llama-3.3-70B-Instruct-AWQ-INT4'
            - 'latest'
            - '--disable-log-requests'
            - '--max-model-len=70000'
            - '--enable-auto-tool-choice'
            - '--tool-call-parser'
            - 'llama3_json'
          volumeMounts:
            - name: mount-dir
              mountPath: /mnt
              mountPropagation: HostToContainer
          resources:
            limits:
              "nvidia.com/GH100_H100_PCIE": 1
        - name: inference-proxy
          image: ghcr.io/edgelesssys/privatemode/inference-proxy:v1.15.0@sha256:55c42d3ed3c74f8f6332e18d7e3ef63abf17cdf136a8121668f116da61a477dc
          ports:
            - containerPort: 8085
          args:
            - --adapter-type=openai
            - --workload-address=127.0.0.1
            - --workload-port=8000
            - --secret-svc-address=secret-service-internal.continuum-e14845.svc.cluster.local
            - '--etcd-member-cert=/contrast/tls-config/certChain.pem'
            - '--etcd-member-key=/contrast/tls-config/key.pem'
            - '--etcd-ca=/contrast/tls-config/mesh-ca.pem'
      volumes:
        - emptyDir: {}
          name: mount-dir
  volumeClaimTemplates:
    - kind: PersistentVolumeClaim
      metadata:
        name: modelweights
        labels:
          app.kubernetes.io/instance: 'e14845'
      spec:
        storageClassName: ibnzterrell-meta-llama-3-3-70b-instruct-awq-int4
        volumeMode: Block
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 41Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: unstructured-api
  namespace: continuum-e14845
  labels:
    app: unstructured-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: unstructured-api
  template:
    metadata:
      labels:
        app: unstructured-api
        app.kubernetes.io/instance: 'e14845'
      annotations:
        io.katacontainers.config.runtime.create_container_timeout: "600"
    spec:
      runtimeClassName: contrast-cc
      containers:
        - name: unstructured-api
          image: 'quay.io/unstructured-io/unstructured-api:0.0.83@sha256:49b31365e2747d3a5f0fb4f33daf55569fd33e3bc63d3f3861b10b6af59f4fee'
          resources:
            requests:
              memory: "24Gi"
            limits:
              memory: "24Gi"
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: http
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 5
        - name: inference-proxy
          image: ghcr.io/edgelesssys/privatemode/inference-proxy:v1.15.0@sha256:55c42d3ed3c74f8f6332e18d7e3ef63abf17cdf136a8121668f116da61a477dc
          ports:
            - containerPort: 8085
          args:
            - --adapter-type=unstructured
            - --workload-address=127.0.0.1
            - --workload-port=8000
            - --secret-svc-address=secret-service-internal.continuum-e14845.svc.cluster.local
            - '--etcd-member-cert=/contrast/tls-config/certChain.pem'
            - '--etcd-member-key=/contrast/tls-config/key.pem'
            - '--etcd-ca=/contrast/tls-config/mesh-ca.pem'
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: coordinator
  namespace: 'continuum-e14845'
  labels:
    app.kubernetes.io/instance: 'e14845'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: coordinator
  namespace: 'continuum-e14845'
  labels:
    app.kubernetes.io/instance: 'e14845'
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - create
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: coordinator
  namespace: 'continuum-e14845'
  labels:
    app.kubernetes.io/instance: 'e14845'
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: coordinator
subjects:
  - kind: ServiceAccount
    name: coordinator
    namespace: "continuum-e14845"
---
apiVersion: v1
kind: Service
metadata:
  name: coordinator
  namespace: 'continuum-e14845'
  labels:
    app.kubernetes.io/instance: 'e14845'
spec:
  ports:
    - name: userapi
      port: 1313
      targetPort: 1313
    - name: meshapi
      port: 7777
      targetPort: 7777
    - name: default-userapi
      port: 443
      targetPort: 1313
  selector:
    app.kubernetes.io/name: coordinator
    app.kubernetes.io/instance: 'e14845'
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: coordinator
  namespace: 'continuum-e14845'
  labels:
    app.kubernetes.io/instance: 'e14845'
spec:
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Delete
    whenScaled: Delete
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: coordinator
  serviceName: coordinator
  template:
    metadata:
      annotations:
        contrast.edgeless.systems/pod-role: coordinator
      labels:
        app.kubernetes.io/name: coordinator
        app.kubernetes.io/instance: 'e14845'
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    contrast.edgeless.systems/pod-role: coordinator
                topologyKey: kubernetes.io/hostname
              weight: 100
      containers:
        - image: ghcr.io/edgelesssys/contrast/coordinator:v1.7.0@sha256:94eed95eca7f497ae516c18343aca5a604142bd7a92318c41c7e0cd5e5b20bcb
          name: coordinator
          ports:
            - containerPort: 1313
              name: userapi
            - containerPort: 7777
              name: meshapi
          readinessProbe:
            initialDelaySeconds: 1
            periodSeconds: 5
            tcpSocket:
              port: 1313
          resources:
            limits:
              memory: 200Mi
            requests:
              memory: 200Mi
          securityContext:
            capabilities:
              add:
                - SYS_ADMIN
          volumeDevices:
            - devicePath: /dev/csi0
              name: state-device
      runtimeClassName: contrast-cc
      serviceAccountName: coordinator
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: state-device
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        volumeMode: Block
