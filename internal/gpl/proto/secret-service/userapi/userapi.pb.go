// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v5.29.3
// source: internal/gpl/proto/secret-service/userapi/userapi.proto

package userapi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SetSecretsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetSecretsResponse) Reset() {
	*x = SetSecretsResponse{}
	mi := &file_internal_gpl_proto_secret_service_userapi_userapi_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetSecretsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSecretsResponse) ProtoMessage() {}

func (x *SetSecretsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_gpl_proto_secret_service_userapi_userapi_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSecretsResponse.ProtoReflect.Descriptor instead.
func (*SetSecretsResponse) Descriptor() ([]byte, []int) {
	return file_internal_gpl_proto_secret_service_userapi_userapi_proto_rawDescGZIP(), []int{0}
}

// SetSecrets is used to set inference secrets.
type SetSecretsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Secrets is a map of secret names to secret values.
	Secrets map[string][]byte `protobuf:"bytes,1,rep,name=Secrets,proto3" json:"Secrets,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// TimeToLive is the time in seconds that the secrets are valid for.
	// 0 or negative values means the secrets are valid indefinitely.
	TimeToLive    int64 `protobuf:"varint,2,opt,name=TimeToLive,proto3" json:"TimeToLive,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetSecretsRequest) Reset() {
	*x = SetSecretsRequest{}
	mi := &file_internal_gpl_proto_secret_service_userapi_userapi_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetSecretsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSecretsRequest) ProtoMessage() {}

func (x *SetSecretsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_gpl_proto_secret_service_userapi_userapi_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSecretsRequest.ProtoReflect.Descriptor instead.
func (*SetSecretsRequest) Descriptor() ([]byte, []int) {
	return file_internal_gpl_proto_secret_service_userapi_userapi_proto_rawDescGZIP(), []int{1}
}

func (x *SetSecretsRequest) GetSecrets() map[string][]byte {
	if x != nil {
		return x.Secrets
	}
	return nil
}

func (x *SetSecretsRequest) GetTimeToLive() int64 {
	if x != nil {
		return x.TimeToLive
	}
	return 0
}

var File_internal_gpl_proto_secret_service_userapi_userapi_proto protoreflect.FileDescriptor

var file_internal_gpl_proto_secret_service_userapi_userapi_proto_rawDesc = string([]byte{
	0x0a, 0x37, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x67, 0x70, 0x6c, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x2c, 0x65, 0x64, 0x67, 0x65, 0x6c,
	0x65, 0x73, 0x73, 0x73, 0x79, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x75, 0x6d,
	0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x61, 0x70, 0x69, 0x22, 0x14, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xd7, 0x01,
	0x0a, 0x11, 0x53, 0x65, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x66, 0x0a, 0x07, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x73,
	0x79, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x75, 0x6d, 0x2e, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x07, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x54,
	0x69, 0x6d, 0x65, 0x54, 0x6f, 0x4c, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x54, 0x69, 0x6d, 0x65, 0x54, 0x6f, 0x4c, 0x69, 0x76, 0x65, 0x1a, 0x3a, 0x0a, 0x0c, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0x9b, 0x01, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x50, 0x49, 0x12, 0x8f, 0x01, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x73, 0x12, 0x3f, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x73, 0x79, 0x73,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x75, 0x6d, 0x2e, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x61, 0x70,
	0x69, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x73, 0x79,
	0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x75, 0x6d, 0x2e, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x61,
	0x70, 0x69, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x4c, 0x5a, 0x4a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x73, 0x79, 0x73, 0x2f,
	0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x75, 0x6d, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x2f, 0x67, 0x70, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_internal_gpl_proto_secret_service_userapi_userapi_proto_rawDescOnce sync.Once
	file_internal_gpl_proto_secret_service_userapi_userapi_proto_rawDescData []byte
)

func file_internal_gpl_proto_secret_service_userapi_userapi_proto_rawDescGZIP() []byte {
	file_internal_gpl_proto_secret_service_userapi_userapi_proto_rawDescOnce.Do(func() {
		file_internal_gpl_proto_secret_service_userapi_userapi_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_internal_gpl_proto_secret_service_userapi_userapi_proto_rawDesc), len(file_internal_gpl_proto_secret_service_userapi_userapi_proto_rawDesc)))
	})
	return file_internal_gpl_proto_secret_service_userapi_userapi_proto_rawDescData
}

var file_internal_gpl_proto_secret_service_userapi_userapi_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_internal_gpl_proto_secret_service_userapi_userapi_proto_goTypes = []any{
	(*SetSecretsResponse)(nil), // 0: edgelesssys.continuum.secret_service.userapi.SetSecretsResponse
	(*SetSecretsRequest)(nil),  // 1: edgelesssys.continuum.secret_service.userapi.SetSecretsRequest
	nil,                        // 2: edgelesssys.continuum.secret_service.userapi.SetSecretsRequest.SecretsEntry
}
var file_internal_gpl_proto_secret_service_userapi_userapi_proto_depIdxs = []int32{
	2, // 0: edgelesssys.continuum.secret_service.userapi.SetSecretsRequest.Secrets:type_name -> edgelesssys.continuum.secret_service.userapi.SetSecretsRequest.SecretsEntry
	1, // 1: edgelesssys.continuum.secret_service.userapi.UserAPI.SetSecrets:input_type -> edgelesssys.continuum.secret_service.userapi.SetSecretsRequest
	0, // 2: edgelesssys.continuum.secret_service.userapi.UserAPI.SetSecrets:output_type -> edgelesssys.continuum.secret_service.userapi.SetSecretsResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_internal_gpl_proto_secret_service_userapi_userapi_proto_init() }
func file_internal_gpl_proto_secret_service_userapi_userapi_proto_init() {
	if File_internal_gpl_proto_secret_service_userapi_userapi_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_internal_gpl_proto_secret_service_userapi_userapi_proto_rawDesc), len(file_internal_gpl_proto_secret_service_userapi_userapi_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_internal_gpl_proto_secret_service_userapi_userapi_proto_goTypes,
		DependencyIndexes: file_internal_gpl_proto_secret_service_userapi_userapi_proto_depIdxs,
		MessageInfos:      file_internal_gpl_proto_secret_service_userapi_userapi_proto_msgTypes,
	}.Build()
	File_internal_gpl_proto_secret_service_userapi_userapi_proto = out.File
	file_internal_gpl_proto_secret_service_userapi_userapi_proto_goTypes = nil
	file_internal_gpl_proto_secret_service_userapi_userapi_proto_depIdxs = nil
}
